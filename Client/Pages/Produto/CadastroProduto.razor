@page "/produto/cadastro"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Cadastro de Produto</h3>

<EditForm Model="produto" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset">
    <DataAnnotationsValidator/>
    <div class="form-row">
        <div class="form-group col-md-5">
            <label>Nome</label>
            <div>
                <InputText class="form-control" @bind-Value="@produto.Nome" />
                <ValidationMessage For="@( () => produto.Nome )" />
            </div>
        </div>
        <div class="form-group col-md-4">
            <label>Descrição</label>
            <div>
                <InputText class="form-control" @bind-Value="@produto.Descricao" />
                <ValidationMessage For="@( () => produto.Descricao )" />
            </div>
        </div>
        <div class="form-group col-md-4">
            <label>Valor</label>
            <div>
                <InputNumber class="form-control" @bind-Value="@produto.Valor" />
                <ValidationMessage For="@( () => produto.Valor )" />
            </div>
        </div>
    </div>
    <div class="row justify-content-md-center">
        <div>
            <button class="btn btn-success" type="submit">Cadastrar</button>
            <button class="btn btn-secondary" type="reset">Cancelar</button>
        </div>
    </div>
</EditForm>

@code {
    private Produto produto = new Produto();
    private EditContext editContext { get; set; }

    private async Task HandleValidSubmit()
    {
        var teste = await Http.PostAsJsonAsync("/Produto/Create", produto);
        NavigationManager.NavigateTo("Produto/ListProduto");

    }

    private void HandleReset()
    {
        produto = new Produto();
        editContext = new EditContext(produto);
    }

    

}